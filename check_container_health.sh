#!/bin/bash

# Script ki·ªÉm tra health c·ªßa container v√† t·ª± ƒë·ªông restart n·∫øu c·∫ßn

CONTAINER_NAME="email-processor-api"
API_URL="http://localhost:8000/"
LOG_FILE="/var/log/email-processor-health.log"

echo "========================================" | tee -a "$LOG_FILE"
echo "$(date '+%Y-%m-%d %H:%M:%S') - Health Check" | tee -a "$LOG_FILE"
echo "========================================" | tee -a "$LOG_FILE"

# Ki·ªÉm tra container c√≥ ƒëang ch·∫°y kh√¥ng
if ! docker ps | grep -q "$CONTAINER_NAME"; then
    echo "‚ùå Container kh√¥ng ch·∫°y! ƒêang restart..." | tee -a "$LOG_FILE"
    docker-compose restart
    exit 1
fi

# Ki·ªÉm tra API c√≥ response kh√¥ng
if ! curl -sf "$API_URL" > /dev/null 2>&1; then
    echo "‚ùå API kh√¥ng ph·∫£n h·ªìi! Checking logs..." | tee -a "$LOG_FILE"
    
    # L·∫•y logs 20 d√≤ng cu·ªëi
    echo "--- Container Logs (last 20 lines) ---" | tee -a "$LOG_FILE"
    docker logs "$CONTAINER_NAME" --tail 20 | tee -a "$LOG_FILE"
    
    # Ki·ªÉm tra resource usage
    echo "--- Resource Usage ---" | tee -a "$LOG_FILE"
    docker stats "$CONTAINER_NAME" --no-stream | tee -a "$LOG_FILE"
    
    # Restart container
    echo "üîÑ Restarting container..." | tee -a "$LOG_FILE"
    docker-compose restart
    
    # ƒê·ª£i container start
    sleep 10
    
    # Check l·∫°i
    if curl -sf "$API_URL" > /dev/null 2>&1; then
        echo "‚úÖ Container ƒë√£ restart th√†nh c√¥ng" | tee -a "$LOG_FILE"
    else
        echo "‚ùå Container v·∫´n kh√¥ng ho·∫°t ƒë·ªông sau restart" | tee -a "$LOG_FILE"
    fi
else
    echo "‚úÖ Container ho·∫°t ƒë·ªông b√¨nh th∆∞·ªùng" | tee -a "$LOG_FILE"
fi

# Ki·ªÉm tra resource usage
MEMORY=$(docker stats "$CONTAINER_NAME" --no-stream --format "{{.MemPerc}}" | sed 's/%//')
CPU=$(docker stats "$CONTAINER_NAME" --no-stream --format "{{.CPUPerc}}" | sed 's/%//')

echo "üìä CPU: ${CPU}% | Memory: ${MEMORY}%" | tee -a "$LOG_FILE"

# C·∫£nh b√°o n·∫øu resource cao
if (( $(echo "$MEMORY > 80" | bc -l) )); then
    echo "‚ö†Ô∏è WARNING: Memory usage cao (${MEMORY}%)" | tee -a "$LOG_FILE"
fi

if (( $(echo "$CPU > 80" | bc -l) )); then
    echo "‚ö†Ô∏è WARNING: CPU usage cao (${CPU}%)" | tee -a "$LOG_FILE"
fi

echo "" | tee -a "$LOG_FILE"

